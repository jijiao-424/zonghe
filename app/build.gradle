plugins {
    id 'com.android.application'
    // 【关键补充】确保您的项目也声明了kotlin插件
    id 'org.jetbrains.kotlin.android'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {
    namespace 'com.hui.tallybox'
    compileSdk 33

    defaultConfig {
        applicationId "com.hui.tallybox"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "ALIYUN_API_KEY", "\"${localProperties.getProperty('ALIYUN_API_KEY', '')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 【最终修复】同时为 Java 和 Kotlin 设置编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // 【关键补充】为 Kotlin 编译器指定 JVM 目标版本
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    // Material Design - 兼容 compileSdk 33 的版本
    implementation 'com.google.android.material:material:1.9.0'

    // AndroidX 核心库 - 兼容 compileSdk 33 的版本
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference:1.2.1'

    // 测试库
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}